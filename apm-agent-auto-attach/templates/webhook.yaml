# heavily influenced by https://github.com/ExpediaGroup/kubernetes-sidecar-injector
{{- define "common.labels" }}
app.kubernetes.io/name: {{ .Release.Name }}
app.kubernetes.io/component: webhook
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{- define "certs.secret.name" }}
{{- .Release.Name }}
{{- end }}

{{- define "service.name" }}
{{- .Release.Name }}
{{- end }}

{{- $caPrefix := printf "%s-ca" .Release.Name }}
{{- $ca := genCA $caPrefix 3650 }}
{{- $cn := .Release.Name }}
{{- $csrName := printf "%s.%s.svc" (include "service.name" .) .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $csrName) 3650 $ca }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "certs.secret.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
data:
  cert.pem: {{ b64enc $cert.Cert }}
  key.pem: {{ b64enc $cert.Key }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "common.labels" . | indent 4 }}
webhooks:
  - name: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
    clientConfig:
      service:
        name: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        path: "/"
      caBundle: {{ b64enc $ca.Cert }}
    failurePolicy: Fail
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchExpressions:
        - {key: elastic-apm-agent, operator: Exists}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels" . | indent 6 }}
  template:
    metadata:
      annotations:
        generated-cert: {{ sha256sum $cert.Cert }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | indent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # TODO: Why does the OCI runtime fail on these not being available?
          # is there some timing thing with the mount?
          # args:
          #   - -certFile={{ .Values.certPath }}/{{ .Values.certFile }}
          #   - -keyFile={{ .Values.certPath }}/{{ .Values.keyFile }}
          volumeMounts:
            - name: {{ .Release.Name }}-certs
              mountPath: {{ .Values.certPath }}
              readOnly: true
          ports:
            - name: https
              containerPort: {{ .Values.container.port }}
              protocol: TCP
      volumes:
        - name: {{ .Release.Name }}-certs
          secret:
            secretName: {{ include "certs.secret.name" . }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  publishNotReadyAddresses: true
  ports:
    - port: 443
      targetPort: https
  selector:
    {{- include "common.labels" . | indent 4 }}
